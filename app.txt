# import os
# import requests
# from flask import Flask, render_template, request, jsonify, send_file
# from dotenv import load_dotenv
# import uuid

# load_dotenv()

# app = Flask(__name__)

# # مفاتيح API من .env
# OPENROUTER_API_KEY = os.getenv("OPENROUTER_API_KEY")
# ELEVENLABS_API_KEY = os.getenv("ELEVENLABS_API_KEY")
# ELEVENLABS_VOICE_ID = os.getenv("ELEVENLABS_VOICE_ID")

# # الصفحة الرئيسية
# @app.route("/")
# def index():
#     return render_template("index.html")

# # إرسال نص للـ AI (OpenRouter)
# @app.route("/api/send_text", methods=["POST"])
# def send_text():
#     data = request.get_json()
#     user_message = data.get("message", "")

#     headers = {
#         "Authorization": f"Bearer {OPENROUTER_API_KEY}",
#         "Content-Type": "application/json",
#     }
#     payload = {
#         "model": "deepseek/deepseek-chat-v3.1:free",
#         "messages": [
#             {"role": "system", "content": "You are an AI teacher, helpful and clear."},
#             {"role": "user", "content": user_message}
#         ]
#     }

#     response = requests.post(
#         "https://openrouter.ai/api/v1/chat/completions", headers=headers, json=payload
#     )
#     reply_text = response.json()["choices"][0]["message"]["content"]

#     return jsonify({"reply": reply_text})

# # تحويل النص إلى صوت باستخدام ElevenLabs
# @app.route("/api/tts", methods=["POST"])
# def tts():
#     data = request.get_json()
#     text = data.get("text", "")

#     # اسم الملف
#     filename = f"{uuid.uuid4()}.mp3"
#     output_file = os.path.join("static", filename)

#     # API URL + Headers
#     tts_url = f"https://api.elevenlabs.io/v1/text-to-speech/{ELEVENLABS_VOICE_ID}"
#     headers = {
#         "xi-api-key": ELEVENLABS_API_KEY,
#         "Content-Type": "application/json",
#         "Accept": "audio/mpeg"   # مهم عشان يرجع MP3
#     }
#     payload = {
#         "text": text,
#         "voice_settings": {"stability": 0.7, "similarity_boost": 0.7}
#     }

#     print("🔹 Sending text to ElevenLabs:", text)  # Debug

#     resp = requests.post(tts_url, headers=headers, json=payload)

#     # Debugging info
#     print("🔹 ElevenLabs Status:", resp.status_code)
#     print("🔹 ElevenLabs Headers:", resp.headers)

#     if resp.status_code != 200:
#         print("❌ ElevenLabs Error Response:", resp.text)
#         return jsonify({"error": "TTS request failed", "details": resp.text}), 500

#     # حفظ الصوت في ملف
#     with open(output_file, "wb") as f:
#         f.write(resp.content)

#     file_size = os.path.getsize(output_file)
#     print(f"🔹 Audio file saved: {output_file}, size: {file_size} bytes")

#     # لو الملف طلع فاضي
#     if file_size == 0:
#         return jsonify({"error": "Empty audio file generated"}), 500

#     audio_url = f"/static/{filename}"
#     print("✅ Returning audio URL:", audio_url)

#     return jsonify({"audio_url": audio_url})